import type { PublicKey } from '@solana/web3.js';
import { AuctionHouse } from '@metaplex-foundation/js/dist/types/plugins/auctionHouseModule/models/AuctionHouse';
import { Operation, OperationHandler } from '@metaplex-foundation/js/dist/types/types';
declare const Key: "FindAuctionHouseByAddressOperation";
/**
 * Finds an Auction House by its address.
 *
 * ```ts
 * const nft = await metaplex
 *   .auctionHouse()
 *   .findByAddress({ address };
 * ```
 *
 * @group Operations
 * @category Constructors
 */
export declare const findAuctionHouseByAddressOperation: import("@metaplex-foundation/js/dist/types/types").OperationConstructor<FindAuctionHouseByAddressOperation, "FindAuctionHouseByAddressOperation", FindAuctionHouseByAddressInput, Readonly<{
    model: "auctionHouse";
    address: import("@metaplex-foundation/js/dist/types/types").Pda;
    creatorAddress: PublicKey;
    authorityAddress: PublicKey;
    treasuryMint: import("@metaplex-foundation/js/dist/types/plugins").Mint;
    feeAccountAddress: import("@metaplex-foundation/js/dist/types/types").Pda;
    treasuryAccountAddress: import("@metaplex-foundation/js/dist/types/types").Pda;
    feeWithdrawalDestinationAddress: PublicKey;
    treasuryWithdrawalDestinationAddress: PublicKey;
    sellerFeeBasisPoints: number;
    requiresSignOff: boolean;
    canChangeSalePrice: boolean;
    isNative: boolean;
    scopes: import("@metaplex-foundation/mpl-auction-house").AuthorityScope[];
} & {
    hasAuctioneer: false;
}> | Readonly<{
    model: "auctionHouse";
    address: import("@metaplex-foundation/js/dist/types/types").Pda;
    creatorAddress: PublicKey;
    authorityAddress: PublicKey;
    treasuryMint: import("@metaplex-foundation/js/dist/types/plugins").Mint;
    feeAccountAddress: import("@metaplex-foundation/js/dist/types/types").Pda;
    treasuryAccountAddress: import("@metaplex-foundation/js/dist/types/types").Pda;
    feeWithdrawalDestinationAddress: PublicKey;
    treasuryWithdrawalDestinationAddress: PublicKey;
    sellerFeeBasisPoints: number;
    requiresSignOff: boolean;
    canChangeSalePrice: boolean;
    isNative: boolean;
    scopes: import("@metaplex-foundation/mpl-auction-house").AuthorityScope[];
} & {
    hasAuctioneer: true;
    auctioneer: {
        address: PublicKey;
        authority: PublicKey;
    };
}>>;
/**
 * @group Operations
 * @category Types
 */
export type FindAuctionHouseByAddressOperation = Operation<typeof Key, FindAuctionHouseByAddressInput, AuctionHouse>;
/**
 * @group Operations
 * @category Inputs
 */
export type FindAuctionHouseByAddressInput = {
    /** The address of the Auction House. */
    address: PublicKey;
    /**
     * The Auctioneer authority key.
     * It is required when Auction House has Auctioneer enabled.
     *
     * @defaultValue No default value.
     */
    auctioneerAuthority?: PublicKey;
};
/**
 * @group Operations
 * @category Handlers
 */
export declare const findAuctionHouseByAddressOperationHandler: OperationHandler<FindAuctionHouseByAddressOperation>;
export {};
